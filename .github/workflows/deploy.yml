name: Deploy Java Project to SparkedHost via SFTP and Pterodactyl API

on:
  push:
    branches:
      - main  # Adjust if you want deployment from a different branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to SparkedHost via SFTP

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install package  # Builds the JAR file with dependencies

      - name: Rename JAR for Deployment
        run: |
          mkdir -p deploy
          cp target/*-with-dependencies.jar deploy/ChisaTaki.jar  # Adjust this if your JAR name differs

      - name: Compress existing ChisaTaki.jar using Pterodactyl API
        env:
          PTERO_API_TOKEN: ${{ secrets.SPARKED_HOST }}
          SERVER_ID: ${{ secrets.SERVER_ID }}
        run: |
          COMPRESS_URL="https://control.sparkedhost.us/api/client/servers/$SERVER_ID/files/compress"
          
          # Compress the existing ChisaTaki.jar into ChisaTaki-OLD.zip
          curl -X POST "$COMPRESS_URL" \
            -H "Authorization: Bearer $PTERO_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"root": "/", "files": ["ChisaTaki.jar"], "archive": "ChisaTaki-OLD.zip"}'

      - name: Delete old ChisaTaki.jar after compression using Pterodactyl API
        env:
          PTERO_API_TOKEN: ${{ secrets.SPARKED_HOST }}
          SERVER_ID: ${{ secrets.SERVER_ID }}
        run: |
          DELETE_URL="https://control.sparkedhost.us/api/client/servers/$SERVER_ID/files/delete"
          
          # Delete the original ChisaTaki.jar after compression
          curl -X POST "$DELETE_URL" \
            -H "Authorization: Bearer $PTERO_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"root": "/", "files": ["ChisaTaki.jar"]}'

      - name: Upload ChisaTaki.jar to SparkedHost via SFTP
        uses: mathiasgrimm/sftp-deploy@v1.0.0
        with:
          host: v-dtx-01.sparkedhost.us  # Hardcoded SFTP host
          port: 2022
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          source: "deploy/ChisaTaki.jar"
          target: "/path/on/server/ChisaTaki.jar"  # Update with the correct path on your server
          rm: false
